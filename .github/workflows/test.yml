name: Test

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
  schedule:
    - cron: '0 0 1 9 *'  # September 1st at 00:00 UTC

jobs:
  test:
    name: Julia ${{ matrix.julia-version }} - ${{ matrix.os }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        julia-version:
          - "1.8.5"
          - "1"        # Latest stable 1.x
          - nightly
        os:
          - ubuntu-latest
          - macOS-latest

    steps:
      - name: Setup GNU Fortran
        uses: fortran-lang/setup-fortran@v1

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Julia (platform-aware)
        uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.julia-version }}
          arch: ${{ (matrix.os == 'macOS-latest') && (matrix.julia-version != '1.2.0' && matrix.julia-version != '1.3.1' && matrix.julia-version != '1.5.3') && 'aarch64' || 'x64' }}

      - name: Cache Julia environment
        uses: julia-actions/cache@v1
        with:
          ignore-no-cache: true

      - name: Build Julia package
        uses: julia-actions/julia-buildpkg@v1

      # Use `--check-bounds` only for Julia >= 1.6
      - name: Run Julia tests (>= 1.6)
        if: ${{ startsWith(matrix.julia-version, '1.6') || matrix.julia-version == '1' || matrix.julia-version == 'nightly' }}
        uses: julia-actions/julia-runtest@v1
        with:
          annotate: true
          julia-args: --check-bounds=yes --compiled-modules=yes --depwarn=yes

      # Use without `--check-bounds` for older Julia versions
      - name: Run Julia tests (< 1.6)
        if: ${{ !(startsWith(matrix.julia-version, '1.6') || matrix.julia-version == '1' || matrix.julia-version == 'nightly') }}
        uses: julia-actions/julia-runtest@v1
        with:
          annotate: true
          julia-args: --compiled-modules=yes --depwarn=yes
